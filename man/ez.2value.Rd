% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame.R
\name{ez.2value}
\alias{ez.2value}
\title{wrapper of \code{\link[sjmisc]{to_value}}; see also \code{\link{ez.num}}}
\usage{
ez.2value(x, col = NULL, start.at = NULL, keep.labels = TRUE, ...)
}
\arguments{
\item{x}{a data frame or a vector/col}

\item{col}{if x is a data frame, col is specified (e.g., "cond"), convert that col only
\cr        if x is a data frame, col is unspecified (i.e., NULL default), convert all possible cols in x
\cr        if x is not a data frame, col is ignored}

\item{start.at}{starting index, i.e. the lowest numeric value of the variable's value range. By default, this argument is NULL, hence the lowest value of the returned numeric variable corresponds to the lowest factor level (if factor is numeric) or to 1 (if factor levels are not numeric).}
}
\value{
returns a numeric variable or a data frame with changed col(s)
\cr if x is a factor with chars, will be converted to 1 2 3 etc, see the example
\cr if x, however, is a factor with chars of numbers "2","4","6", will be converted to 2 4 6 etc, see the example
\cr \code{\link{ez.num}} keeps the same char as is
}
\description{
continous number<--categorical string/number
}
\details{
opposite of \code{\link{ez.2factor}}, \code{\link{ez.2label}}
}
\examples{
# starting at 1
dummy <- factor(c("D", "F", "H"))
to_value(dummy)
# [1] 1 2 3
# attr(,"labels")
# D F H
# 1 2 3

dummy <- factor(c("6", "4", "2"))
to_value(dummy)
# [1] 6 2 4
# attr(,"labels")
# 2 4 6 
# 2 4 6 
}
\seealso{
\code{\link[tidyr]{gather}}, \code{\link[tidyr]{spread}}, \code{\link[tidyr]{separate}}, \code{\link[tidyr]{unite}}
\cr \code{\link[dplyr]{select}}, \code{\link[dplyr]{slice}}
\cr \code{\link[dplyr]{distinct}}, \code{\link[dplyr]{arrange}}
\cr \code{\link[dplyr]{summarise}}, \code{\link[dplyr]{count}}, \code{\link[dplyr]{mutate}}
\cr \code{\link[dplyr]{group_by}}, \code{\link[dplyr]{left_join}}, \code{\link[dplyr]{right_join}}, \code{\link[dplyr]{inner_join}}, \code{\link[dplyr]{full_join}}, \code{\link[dplyr]{semi_join}}, \code{\link[dplyr]{anti_join}}
\cr \code{\link[dplyr]{intersect}}, \code{\link[dplyr]{union}}, \code{\link[dplyr]{setdiff}}
\cr \code{\link[dplyr]{bind_rows}}, \code{\link[dplyr]{bind_cols}}

Other data.transformation.functions: \code{\link{ez.2factor}},
  \code{\link{ez.2label}}, \code{\link{ez.2long}},
  \code{\link{ez.2lower}}, \code{\link{ez.2wide}},
  \code{\link{ez.compute}}, \code{\link{ez.del}},
  \code{\link{ez.label.get}}, \code{\link{ez.label.set}},
  \code{\link{ez.leftjoin}}, \code{\link{ez.move}},
  \code{\link{ez.newcol}}, \code{\link{ez.recode2}},
  \code{\link{ez.recode}}, \code{\link{ez.recols}},
  \code{\link{ez.recol}}, \code{\link{ez.rename}},
  \code{\link{ez.replace}}, \code{\link{ez.rncols}},
  \code{\link{ez.rncol}}, \code{\link{ez.select}},
  \code{\link{ez.sort}}, \code{\link{ez.split}},
  \code{\link{ez.unique}}, \code{\link{ez.values.get}},
  \code{\link{ez.values.set}}
}

